{"version":3,"sources":["components/UI/Card.js","components/Expenses/ExpenseDate.js","components/Expenses/ExpenseItem.js","components/Expenses/ExpensesList.js","components/ExpensesFilter/ExpensesFilter.js","components/Chart/ChartBar.js","components/Chart/Chart.js","components/Expenses/ExpensesChart.js","components/Expenses/Expenses.js","components/NewExpense/ExpenseForm.js","components/NewExpense/NewExpense.js","App.js","index.js"],"names":["Card","props","classes","className","children","ExpenseDate","month","date","toLocaleString","day","year","getFullYear","ExpenseItem","title","amount","ExpensesList","items","length","map","expense","id","ExpensesFilter","value","selected","onChange","event","onSaveYear","target","ChartBar","barFillHeight","maxValue","Math","round","style","height","label","Chart","dataPointValues","dataPoints","dataPoint","totalMaximum","max","ExpensesChart","chartDataPoints","expenses","getMonth","Expenses","useState","setYear","filteredExpArray","item","filter","filteredExp","toString","selectedYear","ExpenseForm","enteredTitle","setEnteredTitle","enteredAmount","setEnteredAmount","enteredDate","setEnteredDate","submitHandler","preventDefault","setShowForm","expenseData","Date","onSaveExpenseData","console","log","showForm","onClick","onSubmit","type","min","step","NewExpense","enteredExpenseData","random","onAddExpense","App","DUMMY_EXPENSES","setExpenses","prevExpenses","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0b3eee44.chunk.js","sourcesContent":["import \"./Card.css\";\n\nfunction Card(props) {\n  const classes = \"card \" + props.className;\n\n  return <div className={classes}>{props.children}</div>;\n}\n\nexport default Card;\n","import \"./ExpenseDate.css\";\n\nfunction ExpenseDate(props) {\n  const month = props.date.toLocaleString(\"en-US\", { month: \"long\" });\n  const day = props.date.toLocaleString(\"en-US\", { day: \"2-digit\" });\n  const year = props.date.getFullYear();\n\n  return (\n    <div className=\"expense-date\">\n      <div className=\"expense-date__month\">{month}</div>\n      <div className=\"expense-date__day\">{day}</div>\n      <div className=\"expense-date__year\">{year}</div>\n    </div>\n  );\n}\n\nexport default ExpenseDate;\n","import \"./ExpenseItem.css\";\nimport Card from \"../UI/Card\";\nimport ExpenseDate from \"./ExpenseDate\";\n\nfunction ExpenseItem(props) {\n  return (\n    <li>\n    <Card className=\"expense-item\">\n      <ExpenseDate date={props.date} />\n      <div className=\"expense-item__description\">\n        <h2>{props.title}</h2>\n        <div className=\"expense-item__price\">${props.amount}</div>\n      </div>\n    </Card>\n    </li>\n  );\n}\n\nexport default ExpenseItem;\n","import \"./ExpensesList.css\";\nimport ExpenseItem from \"./ExpenseItem\";\n\nfunction ExpensesList(props) {\n  if (props.items.length === 0) {\n    return <h2 className=\"expenses-list__fallback\">No expenses found.</h2>;\n  }\n\n  return (\n    <ul className=\"expenses-list\">\n      {props.items.map((expense) => (\n        <ExpenseItem\n          key={expense.id}\n          title={expense.title}\n          amount={expense.amount}\n          date={expense.date}\n        />\n      ))}\n    </ul>\n  );\n}\n\nexport default ExpensesList;\n","import React from 'react';\n\nimport './ExpensesFilter.css';\n\nfunction ExpensesFilter(props){\n    const submitHandler = (event) => {\n         props.onSaveYear(event.target.value);\n    }\n  return (\n    <div className='expenses-filter'>\n      <div className='expenses-filter__control'>\n        <label>Filter by year</label>\n        <select value={props.selected} onChange={submitHandler}>\n          <option value='2022'>2022</option>\n          <option value='2021'>2021</option>\n          <option value='2020'>2020</option>\n          <option value='2019'>2019</option>\n        </select>\n      </div>\n    </div>\n  );\n};\n\nexport default ExpensesFilter;\n","import \"./ChartBar.css\";\n\nfunction ChartBar(props) {\n  let barFillHeight = \"0%\";\n\n  if (props.maxValue > 0) {\n    barFillHeight = Math.round((props.value / props.maxValue) * 100) + \"%\";\n  }\n  return (\n    <div className=\"chart-bar\">\n      <div className=\"chart-bar__inner\">\n        <div\n          className=\"chart-bar__fill\"\n          style={{ height: barFillHeight }}\n        ></div>\n      </div>\n      <div className=\"chart-bar__label\">{props.label}</div>\n    </div>\n  );\n}\n\nexport default ChartBar;\n","import \"./Chart.css\";\n\nimport ChartBar from \"./ChartBar\";\n\nfunction Chart(props) {\n  const dataPointValues = props.dataPoints.map((dataPoint) => dataPoint.value);\n  const totalMaximum = Math.max(...dataPointValues);\n  return (\n    <div className=\"chart\">\n      {props.dataPoints.map((dataPoint) => (\n        <ChartBar\n          key={dataPoint.label}\n          value={dataPoint.value}\n          maxValue={totalMaximum}\n          label={dataPoint.label}\n        />\n      ))}\n    </div>\n  );\n}\n\nexport default Chart;\n","import Chart from \"../Chart/Chart\";\n\nfunction ExpensesChart(props) {\n    const chartDataPoints =[\n        { label: \"Jan\", value: 0 },\n        { label: \"Feb\", value: 0 },\n        { label: \"Mar\", value: 0 },\n        { label: \"Apr\", value: 0 },\n        { label: \"May\", value: 0 },\n        { label: \"Jun\", value: 0 },\n        { label: \"Jul\", value: 0 },\n        { label: \"Aug\", value: 0 },\n        { label: \"Sep\", value: 0 },\n        { label: \"Oct\", value: 0 },\n        { label: \"Nov\", value: 0 },\n        { label: \"Dec\", value: 0 },\n    ];\n\n    for (const expense of props.expenses) {\n        const expenseMonth = expense.date.getMonth();\n        chartDataPoints[expenseMonth].value += expense.amount;\n    }\n  return <Chart dataPoints = {chartDataPoints} />;\n}\n\nexport default ExpensesChart;\n","import React, { useState } from \"react\";\nimport ExpensesList from \"./ExpensesList\";\nimport ExpensesFilter from \"../ExpensesFilter/ExpensesFilter\";\nimport \"./Expenses.css\";\nimport Card from \"../UI/Card\";\nimport ExpensesChart from \"./ExpensesChart\";\n\nfunction Expenses(props) {\n  const [year, setYear] = useState(\"2019\");\n  const savedYear = (selectedYear) => {\n    setYear(selectedYear);\n  };\n\n  let filteredExpArray = props.item.filter(\n    (filteredExp) => filteredExp.date.getFullYear().toString() === year\n  );\n\n  return (\n    <div>\n      <Card className=\"expenses\">\n        <ExpensesFilter selected={year} onSaveYear={savedYear} />\n        <ExpensesChart expenses={filteredExpArray} />\n        <ExpensesList items={filteredExpArray} />\n      </Card>\n    </div>\n  );\n}\n\nexport default Expenses;\n","import React, { useState } from \"react\";\nimport \"./ExpenseForm.css\";\n\nfunction ExpenseForm(props) {\n  const [enteredTitle, setEnteredTitle] = useState(\"\");\n  const titleChangeHandler = (event) => {\n    setEnteredTitle(event.target.value);\n  };\n\n  const [enteredAmount, setEnteredAmount] = useState(\"\");\n  const amountChangeHandler = (event) => {\n    setEnteredAmount(event.target.value);\n  };\n\n  const [enteredDate, setEnteredDate] = useState(\"\");\n  const dateChangeHandler = (event) => {\n    setEnteredDate(event.target.value);\n  };\n\n  const submitHandler = (event) => {\n    event.preventDefault();\n    setShowForm(false);\n    const expenseData = {\n      title: enteredTitle,\n      amount: enteredAmount,\n      date: new Date(enteredDate),\n    };\n    props.onSaveExpenseData(expenseData);\n    console.log(expenseData)\n    setEnteredTitle(\"\");\n    setEnteredAmount(\"\");\n    setEnteredDate(\"\");\n  };\n\n  const [showForm, setShowForm] = useState(false);\n \n\n  if (showForm === false) {\n    return (\n      <div className=\"new-expense__control\">\n        <button onClick={() => setShowForm(true)}>Add New Expense</button>\n      </div>\n    );\n  } else {\n    return (\n      <form onSubmit={submitHandler}>\n        <div className=\"new-expense__controls\">\n          <div className=\"new-expense__control\">\n            <label>Title</label>\n            <input\n              type=\"text\"\n              value={enteredTitle}\n              onChange={titleChangeHandler}\n            />\n          </div>\n          <div className=\"new-expense__control\">\n            <label>Amount</label>\n            <input\n              type=\"number\"\n              min=\"0.01\"\n              step=\"0.01\"\n              value={enteredAmount}\n              onChange={amountChangeHandler}\n            />\n          </div>\n          <div className=\"new-expense__control\">\n            <label>Date</label>\n            <input\n              type=\"date\"\n              min=\"2019-01-01\"\n              max=\"2022-12-31\"\n              value={enteredDate}\n              onChange={dateChangeHandler}\n            />\n          </div>\n        </div>\n        <div className=\"new-expense__actions\">\n        <button type=\"button\" onClick={() => {setShowForm(false)}}>Cancel</button>\n          <button  onClick={submitHandler} type=\"submit\">Add Expense</button>\n        </div>\n      </form>\n    );\n  }\n}\n\nexport default ExpenseForm;\n","import ExpenseForm from \"./ExpenseForm\";\nimport \"./NewExpense.css\";\n\nfunction NewExpense(props) {\n\n  const saveExpenseDataHandler = (enteredExpenseData) => {\nconst expenseData = {\n  ...enteredExpenseData,\n  id: Math.random().toString()\n};\nprops.onAddExpense(expenseData);\n  };\n\n  return (\n    <div className=\"new-expense\">\n      <ExpenseForm onSaveExpenseData={saveExpenseDataHandler}/>\n    </div>\n  );\n}\n\nexport default NewExpense;\n","import React, { useState } from \"react\";\nimport Expenses from \"./components/Expenses/Expenses\";\nimport NewExpense from \"./components/NewExpense/NewExpense\";\n\nfunction App() {\n  const DUMMY_EXPENSES = [\n    {\n      id: \"e1\",\n      title: \"Toilet Paper\",\n      amount: 94.12,\n      date: new Date(2020, 7, 14),\n    },\n    { id: \"e2\", title: \"New TV\", amount: 799.49, date: new Date(2021, 2, 12) },\n    {\n      id: \"e3\",\n      title: \"Car Insurance\",\n      amount: 294.67,\n      date: new Date(2021, 2, 28),\n    },\n    {\n      id: \"e4\",\n      title: \"New Desk (Wooden)\",\n      amount: 450,\n      date: new Date(2021, 5, 12),\n    },\n  ];\n  const [expenses, setExpenses] = useState(DUMMY_EXPENSES);\n  const addExpenseHandler = (expense) => {\n    setExpenses((prevExpenses) => {\n      return [expense, ...prevExpenses];\n    });\n  };\n\n  return (\n    <div>\n      <NewExpense onAddExpense={addExpenseHandler} />\n      <Expenses item={expenses} />\n    </div>\n  );\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}